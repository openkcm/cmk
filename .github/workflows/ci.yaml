name: Quality

on:
  push:
    tags:
      - v*
    branches:
      - main
    paths-ignore:
      - 'charts/**'
      - 'docs/**'
      - 'LICENSES/**'
      - '.releases/**'
      - '.github/**'
  pull_request:

permissions:
  contents: read

jobs:
  validate-and-testing:
    runs-on: ubuntu-24.04

    steps:
      - name: Init
        id: init
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            echo "internal_pr=$([[ '${{ github.event.pull_request.head.repo.full_name }}' == '${{ github.repository }}' ]] && echo true || echo false)" >> "$GITHUB_OUTPUT"
          else
            echo "internal_pr=true" >> "$GITHUB_OUTPUT"
          fi

      - name: Generate token from GitHub App
        id: generate-token
        if: steps.init.outputs.internal_pr == 'true' && github.actor != 'dependabot[bot]'
        uses: actions/create-github-app-token@67018539274d69449ef7c02e8e71183d1719ab42  # v2.1.4
        with:
          app-id: ${{ secrets.APP_PUSH_TAG_ID }}
          private-key: ${{ secrets.APP_PUSH_TAG_PRIVATE_KEY }}

      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          token: ${{ steps.generate-token.outputs.token || github.token }}
          fetch-tags: true
          fetch-depth: 0
          submodules: recursive

      - name: Set up Go
        uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
        with:
          go-version-file: go.mod

      - name: Checkout build (taskfiles) repo
        run: |
          git clone --branch main --single-branch https://github.com/openkcm/build.git ./hack/common

      - name: Install Task
        uses: arduino/setup-task@b91d5d2c96a56797b48ac1e0e89220bf64044611 #v2.0.0
        with:
          version: 3.x
          repo-token: ${{ steps.generate-token.outputs.token || github.token }}

      - name: task validate
        run: task validate --verbose

      - name: Run Tests using docker
        run: |
          make test

