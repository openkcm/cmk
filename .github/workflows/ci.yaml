name: Quality

on:
  push:
    tags:
      - v*
    branches:
      - main
    paths-ignore:
      - 'charts/**'
      - 'docs/**'
      - 'LICENSES/**'
      - '.releases/**'
      - '.github/**'
  pull_request:

permissions:
  contents: read

jobs:
  validate-and-testing:
    runs-on: ubuntu-24.04

    steps:
      - name: Init
        id: init
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            echo "internal_pr=$([[ '${{ github.event.pull_request.head.repo.full_name }}' == '${{ github.repository }}' ]] && echo true || echo false)" >> "$GITHUB_OUTPUT"
          else
            echo "internal_pr=true" >> "$GITHUB_OUTPUT"
          fi

      - name: Generate token from GitHub App
        id: generate-token
        if: steps.init.outputs.internal_pr == 'true' && github.actor != 'dependabot[bot]'
        uses: tibdex/github-app-token@3beb63f4bd073e61482598c45c71c1019b59b73a # v2.1.0
        with:
          app_id: ${{ secrets.APP_PUSH_TAG_ID }}
          private_key: ${{ secrets.APP_PUSH_TAG_PRIVATE_KEY }}

      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          token: ${{ steps.generate-token.outputs.token || github.token }}
          fetch-tags: true
          fetch-depth: 0
          submodules: recursive

      - name: Set up Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5
        with:
          go-version-file: go.mod

      - name: Checkout build (taskfiles) repo
        run: |
          git clone https://github.com/openkcm/build.git ./hack/common

      - name: Install Task
        uses: arduino/setup-task@b91d5d2c96a56797b48ac1e0e89220bf64044611 #v2.0.0
        with:
          version: 3.x
          repo-token: ${{ steps.generate-token.outputs.token || github.token }}

      - name: Set up environment
        run: |
          echo "repo_name=$(basename "$GITHUB_REPOSITORY")" >> $GITHUB_ENV
          echo "version=$(task version)" >> $GITHUB_ENV

      - name: Generate Build Version
        uses: hashicorp/actions-generate-metadata@f1d852525201cb7bbbf031dd2e985fb4c22307fc #main
        with:
          repositoryOwner: ${{ github.repository_owner }}
          repository: ${{ github.repository }}
          version:  ${{ env.version }}
          product: ${{ env.repo_name }}
          metadataFileName: ${{ github.workspace }}/build_version.json

      - name: task validate
        run: task validate --verbose

      - name: Run Tests using docker
        run: |
          make test

